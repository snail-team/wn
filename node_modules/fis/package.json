{
  "name": "fis",
  "description": "front-end integrated solution.",
  "version": "1.8.13",
  "author": {
    "name": "FIS Team",
    "email": "fis@baidu.com"
  },
  "homepage": "http://fis.baidu.com/",
  "keywords": [
    "fis"
  ],
  "license": "MIT",
  "bin": {
    "fis": "bin/fis"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "main": "fis.js",
  "scripts": {
    "uninstall": "node bin/fis server stop",
    "test": "mocha test/ut --recursive"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fis-dev/fis.git"
  },
  "preferGlobal": true,
  "dependencies": {
    "colors": "0.6.2",
    "commander": "1.3.2",
    "fis-command-install": "0.0.7",
    "fis-command-release": "0.11.3",
    "fis-command-server": "0.7.1",
    "fis-deploy-default": "0.0.2",
    "fis-kernel": "2.0.12",
    "fis-optimizer-clean-css": "0.0.9",
    "fis-optimizer-png-compressor": "0.0.6",
    "fis-optimizer-uglify-js": "0.1.6",
    "fis-packager-map": "0.0.9",
    "fis-postprocessor-jswrapper": "0.0.8",
    "fis-spriter-csssprites": "0.2.5"
  },
  "readme": "![fis logo](https://raw.githubusercontent.com/fouber/fis-wiki-img/master/logo.png)\n\n[![NPM version](https://badge.fury.io/js/fis.png)](http://badge.fury.io/js/fis) [![Dependencies Status](https://david-dm.org/fex-team/fis.png)](https://david-dm.org/fex-team/fis)\n\n[![NPM Download](https://nodei.co/npm-dl/fis.png?months=1)](https://www.npmjs.org/package/fis)\n\n## Front-end Integrated Solution（前端集成解决方案）\n\n> 解决前端工程的根本问题！\n\n## F.I.S简介\n\n* [什么是F.I.S](https://github.com/fis-dev/fis/wiki/什么是F.I.S)\n\n欢迎访问[FIS官网](http://fis.baidu.com)获取最新的文档\n\n同时我们在慕课网开通了[在线课程](http://www.imooc.com/learn/220)，欢迎大家访问\n\n## 功能概述\n\n* 跨平台支持win、mac、linux等系统\n* 无内置规范，可配置 [开发和部署规范](https://github.com/fis-dev/fis/wiki/配置API#wiki-roadmappath)，用于满足任何前后端框架的部署需求\n* 对html、js、css实现 [三种语言能力](https://github.com/fis-dev/fis/wiki/三种语言能力) 扩展，解决绝大多数前端构建问题\n* 支持二次包装，比如 [spmx](https://github.com/fouber/spmx)、 [phiz](https://github.com/fouber/phiz/)、 [chassis](https://github.com/xspider/fis-chassis)，对fis进行包装后可内置新的插件、配置，从而打造属于你们团队的自己的开发工具\n* 自动生成静态资源表关系表（map.json），可用于 [连接前后端开发框架](https://github.com/fis-dev/fis/wiki/基于map.json的前后端架构设计指导)\n* 所有静态资源自动加 ``md5版本戳``，服务端可放心开启永久强缓存\n* 支持给所有静态资源添加域名前缀\n* 可灵活扩展的插件系统，支持对构建过程和命令功能进行扩展，现已发布N多 [插件](https://npmjs.org/search?q=fis)\n* 通过插件配置可以在一个项目中无缝使用 [less](https://github.com/fouber/fis-parser-less)、[coffee](https://github.com/fouber/fis-parser-coffee-script)、[markdown](https://github.com/fouber/fis-parser-marked)、[jade](https://npmjs.org/package/fis-parser-jade)等语言开发\n* 内置 [css sprites插件](https://github.com/fex-team/fis-spriter-csssprites)，简单易用\n* 内置 [png图片压缩插件](https://github.com/fis-dev/fis-optimizer-png-compressor)，采用c++编写的node扩展，具有极高的性能，支持 [将png24压缩为png8](https://github.com/fis-dev/fis-optimizer-png-compressor)\n* 内置本地开发调试服务器，支持完美运行 ``java``、``jsp``、``php`` 等服务端语言\n* 支持文件监听，保存即发布\n* 支持浏览器自动刷新，可同时刷新多个终端中的页面，配合文件监听功能可实现保存即刷新\n* 支持上传到远端服务器，配合文件监听，浏览器自动刷新功能，可实现保存即增量编译上传，上传后即刷新的开发体验\n* 超低学习成本，只须记忆 ``3`` 条命令即可完成开发\n* 抹平编码差异，开发中无论是gbk、gb2312、utf8、utf8-bom等编码的文件，输出时都能统一指定为utf8无bom（默认）或者gbk文件\n\n## 快速入门\n\n* [基本使用](https://github.com/fex-team/fis/wiki/快速入门)\n* [资源压缩](https://github.com/fex-team/fis/wiki/快速入门#资源压缩)\n* [资源合并](https://github.com/fex-team/fis/wiki/快速入门#资源合并)\n* [辅助开发](https://github.com/fex-team/fis/wiki/辅助开发)\n\n## 语言能力\n\n* [关于三种语言能力](https://github.com/fis-dev/fis/wiki/三种语言能力)\n* [定位资源](https://github.com/fis-dev/fis/wiki/定位资源)\n* [嵌入资源](https://github.com/fis-dev/fis/wiki/嵌入资源)\n* [声明依赖](https://github.com/fis-dev/fis/wiki/声明依赖)\n\n## 插件系统\n\n* [编译过程运行原理](https://github.com/fis-dev/fis/wiki/运行原理)\n* [插件调用机制](https://github.com/fis-dev/fis/wiki/插件调用机制)\n* [插件扩展点](https://github.com/fis-dev/fis/wiki/插件扩展点列表)\n* [插件列表](https://github.com/fis-dev/fis/wiki/插件列表)\n\n## 配置文档\n\n* [零配置](https://github.com/fis-dev/fis/wiki/配置API)\n* [使用配置文件](https://github.com/fis-dev/fis/wiki/配置API)\n* 系统配置\n    * [project.charset](https://github.com/fis-dev/fis/wiki/配置API#wiki-projectcharset)\n    * [project.md5Length](https://github.com/fis-dev/fis/wiki/配置API#wiki-projectmd5length)\n    * [project.md5Connector](https://github.com/fis-dev/fis/wiki/配置API#wiki-projectmd5connector)\n    * [project.include](https://github.com/fis-dev/fis/wiki/配置API#wiki-projectinclude)\n    * [project.exclude](https://github.com/fis-dev/fis/wiki/配置API#wiki-projectexclude)\n    * [project.fileType.text](https://github.com/fis-dev/fis/wiki/配置API#wiki-projectfiletypetext)\n    * [project.fileType.image](https://github.com/fis-dev/fis/wiki/配置API#wiki-projectfiletypeimage)\n* 插件配置\n    * [modules.parser](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulesparser)\n    * [modules.preprocessor](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulespreprocessor)\n    * [modules.postprocessor](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulespostprocessor)\n    * [modules.lint](https://github.com/fis-dev/fis/wiki/配置API#wiki-moduleslint)\n    * [modules.test](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulestest)\n    * [modules.optimizer](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulesoptimizer)\n    * [modules.prepackager](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulesprepackager)\n    * [modules.packager](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulespackager)\n    * [modules.spriter](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulesspriter)\n    * [modules.postpackager](https://github.com/fis-dev/fis/wiki/配置API#wiki-modulespostpackager)\n    * [settings](https://github.com/fis-dev/fis/wiki/配置API#wiki-settings)\n* 内置插件运行配置\n    * [settings.postprocessor.jswrapper](https://github.com/fis-dev/fis/wiki/%E9%85%8D%E7%BD%AEAPI#settingspostprocessorjswrapper)\n    * [settings.optimizer.uglify-js](https://github.com/fis-dev/fis/wiki/%E9%85%8D%E7%BD%AEAPI#settingsoptimizeruglify-js)\n    * [settings.optimizer.clean-css](https://github.com/fis-dev/fis/wiki/%E9%85%8D%E7%BD%AEAPI#settingsoptimizerclean-css)\n    * [settings.optimizer.png-compressor](https://github.com/fis-dev/fis/wiki/%E9%85%8D%E7%BD%AEAPI#settingsoptimizerpng-compressor)\n    * [settings.spriter.csssprites](https://github.com/fis-dev/fis/wiki/%E9%85%8D%E7%BD%AEAPI#settingsspritercsssprites)\n* 目录规范与域名配置\n    * [roadmap.path](https://github.com/fis-dev/fis/wiki/配置API#wiki-roadmappath)\n    * [roadmap.ext](https://github.com/fis-dev/fis/wiki/配置API#wiki-roadmapext)\n    * [roadmap.domain](https://github.com/fis-dev/fis/wiki/配置API#wiki-roadmapdomain)\n    * [roadmap.domain.image](https://github.com/fis-dev/fis/wiki/配置API#wiki-roadmapdomainimage)\n* 部署配置\n    * [deploy](https://github.com/fis-dev/fis/wiki/配置API#wiki-deploy)\n* 打包配置\n    * [pack](https://github.com/fis-dev/fis/wiki/配置API#wiki-pack)\n\n## 高级使用\n\n* [基于map.json的前后端架构设计指导](https://github.com/fis-dev/fis/wiki/基于map.json的前后端架构设计指导)\n\n## 更多资料\n\n* [fistool](https://github.com/kaven85/fistool) 可视化界面工具\n* [gois](https://github.com/xiangshouding/gois) go语言组件化解决方案\n* [phiz](https://github.com/fouber/phiz/) PHP组件化解决方案\n* [spmx](https://github.com/fouber/spmx) 通过包装fis得到适应seajs架构的集成解决方案\n* [sublime plugin](https://github.com/yuanfang829/fis-sublime-command) 支持FIS编译的sublime插件，可以替代watch功能\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/fis-dev/fis/issues"
  },
  "_id": "fis@1.8.13",
  "_from": "fis@"
}
